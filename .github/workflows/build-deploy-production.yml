name: Production Deploy

on:
  workflow_dispatch:

  push:
    tags:
      - '*'


concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing Dependencies
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          pnpm install --frozen-lockfile --ignore-scripts

      - name: Build
        run: |
          pnpm run build

      - name: Copy production htaccess
        uses: canastro/copy-file-action@master
        with:
          source: 'public/htaccess-production.txt'
          target: 'dist/.htaccess'

      - name: Install dotenv file
        run: |
          echo "GOOGLE_RECAPTCHA_SECRET=\"${{ secrets.GOOGLE_RECAPTCHA_SECRET }}\"" > dist/.env
          echo "SMTP_PASSWORD=\"${{ secrets.SMTP_PASSWORD }}\"" >> dist/.env
          echo "CONTACT_FORM_RECIPIENT=\"hallo@wonderkamer.com\"" >> dist/.env

      - name: Install PHP dependencies (into /dist/vendor)
        uses: mileschou/composer-action/8.2/install@master
        with:
          args: 'install --working-dir=./dist --no-suggest --prefer-dist --no-interaction --no-progress'

      - name: Archive distribution directory
        run: tar -cvf dist.tar dist

      - name: Persist distribution directory (/dist as 'build-prod')
        uses: actions/upload-artifact@v4.3.3
        with:
          name: build-${{ github.sha }}
          path: dist.tar
          retention-days: 1

  deploy-to-production:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Retrieve distribution
        uses: actions/download-artifact@v4.1.7
        with:
          name: build-${{ github.sha }}
          path: .

      - name: Unpack distribution
        run: tar -xvf dist.tar

      - name: Deploy
        uses: contention/rsync-deployments@v2.0.0
        with:
          flags: -avzr --delete-after
          excludes:
          user: wonderkamercom
          host: wondey.ssh.transip.me
          localpath: /dist/
          remotepath: /data/sites/web/wonderkamercom/www
          deploy_key: ${{ secrets.DEPLOY_KEY }}
